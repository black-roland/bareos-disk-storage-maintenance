#!/bin/bash

set -e

# Parse arguments
while [ $# -gt 0 ]; do
  case "$1" in
    -e | --rsh)
      shift
      REMOTE_SHELL="$1"
      ;;
    -p | --volumes-path)
      shift
      VOLUMES_PATH="$1"
      ;;
    *)
      echo "Unknown argument: $1"
      echo
      echo "Usage: $0 -e 'ssh bareos@bareos-sd.example.com' -p '/var/lib/bareos/storage'"
      exit 1
      ;;
  esac
  shift
done

# Default values
REMOTE_SHELL="${REMOTE_SHELL:-bash -c}"
VOLUMES_PATH="${VOLUMES_PATH:-/var/lib/bareos/storage}"

print_options() {
  echo "Remote/local shell:          ${REMOTE_SHELL}"
  echo "Bareos storage volumes path: ${VOLUMES_PATH}"
  echo
}

prune_all() {
  echo 'Pruning volumes...'

  FILES=`${REMOTE_SHELL} "ls -1 '${VOLUMES_PATH}' | grep -E -v '\.bsr$'"`

  for VOLUME in $FILES; do
    bconsole <<< "prune volume=${VOLUME} yes" > /dev/null
  done
}

delete_purged() {
  echo 'Deleting purged volumes from catalog...'

  PURGED=`echo 'list volumes' | bconsole | grep 'Purged' | awk '{ print $4 }'`

  echo "Purged volumes: `echo ${PURGED} | xargs`"

  for VOLUME in $PURGED; do
    bconsole <<< "delete volume=${VOLUME} yes" > /dev/null
  done
}

delete_obsolete() {
  echo 'Deleting obsolete volume files...'

  FILES=`${REMOTE_SHELL} "ls -1 '${VOLUMES_PATH}' | grep -E -v '\.bsr$'"`

  for VOLUME in $FILES; do
    if bconsole <<< "list volume=${VOLUME}" | grep -q 'No results to list'; then
      OBSOLETE=`printf "${OBSOLETE}\n${VOLUME}"`
    fi
  done

  echo "Obsolete volume files: `echo ${OBSOLETE} | xargs`"

  echo "${OBSOLETE}" | xargs -I '{}' ${REMOTE_SHELL} "rm -f ${VOLUMES_PATH}/{}"
}

print_options
prune_all
delete_purged
delete_obsolete
